{"version":3,"sources":["UTILITIES/formatPrice.js","MENU/MenuItem.js","MENU/MenuList.js","UTILITIES/Menu.js","ORDER/Order.js","App.js","reportWebVitals.js","index.js"],"names":["dollarUS","Intl","NumberFormat","style","currency","formatPrice","priceInCents","format","MenuItem","props","item","className","name","description","price","onClick","onAdd","MenuList","menuItems","map","category","index","src","sectionImage","path","alt","childIndex","order","submitted","setOrder","items","console","log","addToOrder","id","Order","orderHTML","useState","setName","phoneNumber","setPhoneNumber","total","forEach","subtotal","onSubmit","e","preventDefault","addOrder","value","onChange","target","type","placeholder","fontFamily","BASE_URL","App","html","selection","setSelection","a","newOrder","fetch","method","headers","body","JSON","stringify","ok","localStorage","setItem","useEffect","storedOrder","parse","getItem","clear","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7add699.chunk.js","sourcesContent":["let dollarUS = Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nfunction formatPrice(priceInCents) {\n  return dollarUS.format(priceInCents / 100);\n}\n\nexport default formatPrice;\n","import formatPrice from \"../UTILITIES/formatPrice\";\n\nexport default function MenuItem(props) {\n  let item = props.item;\n\n  return (\n    <div className=\"menu-item\">\n      <h4>{item.name}</h4>\n      <p>{item.description}</p>\n      <p>{formatPrice(item.price)} </p>\n\n      <button className=\"addbutton\" onClick={() => props.onAdd()}>\n        Add to Order\n      </button>\n    </div>\n  );\n}\n","import MenuItem from \"./MenuItem\";\n\nfunction MenuList(props) {\n  const menuItems = props.menuItems;\n\n  function addToOrder(item) {\n    if (props.order.submitted === true) {\n      props.setOrder({\n        submitted: false,\n        items: [item],\n      });\n    } else {\n      props.setOrder({\n        ...props.order,\n        items: [...props.order.items, item],\n      });\n    }\n\n    console.log(item);\n  }\n\n  return (\n    <div>\n      {menuItems.map((category, index) => {\n        return (\n          <div key={index} className=\"menu-container\">\n            <div className=\"menu-images\">\n              <img\n                src={category.sectionImage.path}\n                alt={category.sectionImage.alt}\n              />\n            </div>\n            <div className=\"menu-text\">\n              <h2>{category.name}</h2>\n\n              {category.menuItems.map((item, childIndex) => {\n                return (\n                  <MenuItem\n                    key={childIndex}\n                    item={item}\n                    onAdd={() => addToOrder(item)}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default MenuList;\n","const menuItems = [\n  {\n    name: \"Pizzas\",\n    menuItems: [\n      {\n        id: \"pepperoniPizza\",\n        name: \"Pepperoni Pizza\",\n        description:\n          \"Pepperoni, our signature Old World PepperoniÂ®, romesan seasoning, our original sauce and signature three cheeses\",\n        price: 1000,\n      },\n\n      {\n        id: \"cheesePizza\",\n        name: \"Cheese Pizza\",\n        description: \"Our signature five cheese blend and our original sauce.\",\n        price: 1000,\n      },\n      {\n        id: \"supremePizza\",\n        name: \"Supreme Pizza\",\n        description:\n          \"Pepperoni, Italian sausage, mushrooms, green peppers, onions, our original sauce and signature three cheeses\",\n        price: 1000,\n      },\n      {\n        id: \"veggiePizza\",\n        name: \"Veggie Pizza\",\n        description:\n          \"Mushrooms, black olives, onions, sliced tomatoes, our original sauce and signature three cheeses, plus feta\",\n        price: 1000,\n      },\n      {\n        id: \"hawaiianPizza\",\n        name: \"Hawaiian Pizza\",\n        description:\n          \"Ham, pineapple, our original sauce and signature three cheeses\",\n        price: 1000,\n      },\n    ],\n    sectionImage: {\n      path: \"./pizza.jpg\",\n      alt: \"Cheese pizza surrounded by decorative garnish\",\n    },\n  },\n  {\n    name: \"Salads\",\n    menuItems: [\n      {\n        id: \"houseSalad\",\n        name: \"Like a Salad\",\n        description:\n          \"Fresh-cut lettuce blend, cheddar cheese, black olives, onions, green peppers, sliced tomatoes and croutons\",\n        price: 600,\n      },\n      {\n        id: \"caesarSalad\",\n        name: \"Caesar Salad\",\n        description: \"Fresh-cut lettuce blend, parmesan cheese and croutons\",\n        price: 600,\n      },\n    ],\n    sectionImage: {\n      path: \"./salad.jpg\",\n      alt: \"Salad with garnishes and balsamic vinegarette\",\n    },\n  },\n  {\n    name: \"Desserts\",\n    menuItems: [\n      {\n        id: \"cinnamonSticks\",\n        name: \"Cinnamon Sticks\",\n        description:\n          \"Fresh-baked, buttery pastry topped with cinnamon and sugar, served with a side of vanilla icing\",\n        price: 800,\n      },\n\n      {\n        id: \"cannoli\",\n        name: \"Cannoli (2)\",\n        description:\n          \"Made in house fresh with a blend of ricotta and mascarpone cheese. \",\n        price: 400,\n      },\n    ],\n    sectionImage: {\n      path: \"./cannoli.jpg\",\n      alt: \"Cannolis on plate filled with cream and chocolate chips\",\n    },\n  },\n\n  {\n    name: \"Beverages\",\n    menuItems: [\n      {\n        id: \"fountainDrink\",\n        name: \"Fountain Drink\",\n        description: \"Kat's All Natural Small Batch Sodas\",\n        price: 200,\n      },\n      {\n        id: \"beer\",\n        name: \"Beer\",\n        description:\n          \"Local IPA made with the finest hops. Ask for a draft list.\",\n        price: 400,\n      },\n    ],\n    sectionImage: {\n      path: \"./sodanew.jpg\",\n      alt: \"Soda in a glass with lemon slice\",\n    },\n  },\n];\n\nexport default menuItems;\n","import { useState } from \"react\";\nimport formatPrice from \"../UTILITIES/formatPrice\";\n\nfunction Order(props) {\n  const orderHTML = props.order.items.map((item) => {\n    return (\n      <div>\n        <h4>{item.name}</h4>\n        <p>{formatPrice(item.price)}</p>\n      </div>\n    );\n  });\n\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addOrder(props.order, name, phoneNumber);\n    setName(\"\");\n    setPhoneNumber(\"\");\n  }\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n  function handleNumChange(e) {\n    setPhoneNumber(e.target.value);\n  }\n\n  function subtotal() {\n    let total = 0;\n    props.order.items.forEach((item) => {\n      total = total + item.price;\n    });\n    console.log({ total });\n\n    return total;\n  }\n\n  return (\n    <div className=\"order-container\">\n      {\" \"}\n      <div className=\"order-display\">\n        <h3>order details</h3>\n        {orderHTML}\n        <p>Total: {formatPrice(subtotal())}</p>\n        <div className=\"form-container\">\n          <form onSubmit={handleSubmit}>\n            <label>\n              <h4>Please enter your name and number to complete order.</h4>\n            </label>\n            <input\n              name=\"name-input\"\n              value={name}\n              onChange={handleNameChange}\n              type=\"text\"\n              placeholder=\"Name\"\n              style={{ fontFamily: \"Montserrat\" }}\n            />\n            <input\n              name=\"phone-num-input\"\n              value={phoneNumber}\n              onChange={handleNumChange}\n              type=\"tel\"\n              placeholder=\"Phone\"\n              style={{ fontFamily: \"Montserrat\" }}\n            />\n            <button className=\"submitbtn\" type=\"submit\">\n              Submit Order\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Order;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport MenuList from \"./MENU/MenuList\";\nimport menuItems from \"./UTILITIES/Menu.js\";\nimport Order from \"./ORDER/Order\";\nimport formatPrice from \"./UTILITIES/formatPrice\";\nconst BASE_URL = \"https://tiny-taco-server.herokuapp.com/debbies-pizza/\";\n\nfunction App() {\n  const [order, setOrder] = useState({ items: [], submitted: false });\n  const [selection, setSelection] = useState(\"menuScreen\");\n\n  async function addOrder(order, name, phoneNumber) {\n    // this function allows us to add a new order to the api\n    const newOrder = { order: order.items, name, phoneNumber }; // this is what it means to be an order\n    const response = await fetch(`${BASE_URL}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newOrder),\n    });\n\n    if (response.ok) {\n      setSelection(\"successScreen\");\n\n      localStorage.setItem(\n        \"order\",\n        JSON.stringify({ ...order, submitted: true })\n      );\n    }\n  }\n\n  useEffect(() => {\n    const storedOrder = JSON.parse(localStorage.getItem(\"order\"));\n    setOrder(storedOrder || { items: [], submitted: false });\n  }, []);\n\n  useEffect(() => {\n    const storedOrder = JSON.parse(localStorage.getItem(\"order\"));\n    if (storedOrder && storedOrder.submitted === true) {\n      console.log({ order });\n      localStorage.clear();\n    }\n\n    localStorage.setItem(\"order\", JSON.stringify(order));\n  }, [order]);\n\n  let html;\n\n  if (selection === \"menuScreen\") {\n    html = (\n      <MenuList\n        menuItems={menuItems}\n        order={order}\n        setOrder={setOrder}\n        addOrder={addOrder}\n      />\n    );\n  } else if (selection === \"orderScreen\") {\n    html = <Order order={order} setOrder={setOrder} addOrder={addOrder} />; // this is where the order state is being passed to Order comp.\n    {\n      order.items.map((item) => {\n        return (\n          <div>\n            <p>{item.name}</p>\n            <p>{formatPrice(item.price)}</p>\n          </div>\n        );\n      });\n    }\n  } else if (selection === \"successScreen\") {\n    html = (\n      <div className=\"success-card-container\">\n        {\" \"}\n        <div className=\"success-card\">\n          {\" \"}\n          <h3>\n            Thank you for your order! It will be ready for pickup shortly.\n          </h3>\n          <h4>Payment upon pickup.</h4>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"title\">\n        <h1>Debbie's Pizza Palace</h1>\n      </header>\n\n      <nav className=\"nav-bar\">\n        <ul>\n          <li>\n            <button type=\"button\" onClick={() => setSelection(\"menuScreen\")}>\n              MENU\n            </button>\n          </li>\n          <li>\n            <button type=\"button\" onClick={() => setSelection(\"orderScreen\")}>\n              MY ORDER ({order.items.length})\n            </button>\n          </li>\n        </ul>\n      </nav>\n      <main>{html}</main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}